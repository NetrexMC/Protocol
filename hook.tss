// This hook is to provide typesharp with
// the ability to compile mixed rust and t# code.
#compiler no-lazy-types decorators-v2
#compiler use-compile-events -with-types
#compiler enable-macros-rc.1

// This is only in std during betas.
use typesharp.extern.rust;
use {self, macro, Hooks, ast} from typesharp.compiler;

compiler::main().addHook(Hooks::DURING_PARSE << HOOKS::UNKNOWN_BLOCK, (context: ast.Context, block: ast.Block) => ast.Block {
     let tokens = block.body.toTokens();
     if tokens.eatNextName("rust!") {
          let rustEngine = rust::NIGHTLY();
          let newAst = rustEngine.generate_ast_with_llvm(&tokens);

          if context.isLocked() {
               context.release();
          }

          block.syntax = ast.assembly.Syntax::ASM_SYSTEM_ARC;
          block.contents = newAst;
          return block;
     } else {
          return block;
     }
});